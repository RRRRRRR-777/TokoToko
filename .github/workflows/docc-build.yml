name: DocC Build and Deploy

on:
  workflow_dispatch:  # ÊâãÂãïÂÆüË°å„ÅÆ„ÅøÔºà„Ç≥„Çπ„ÉàÂäπÁéáÈáçË¶ñÔºâ

  ÈñãÁô∫„Éñ„É©„É≥„ÉÅ„Åß„ÅÆËá™ÂãïÂÆüË°å
  push:
    branches: 
      - 'dev-*'  # ÈñãÁô∫„Éñ„É©„É≥„ÉÅ
      - 'main'   # „É°„Ç§„É≥„Éñ„É©„É≥„ÉÅ
    paths:
      - 'TekuToko/**/*.swift'
      - '.github/workflows/docc-build.yml'
      - 'project.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: macos-15  # Swift 6ÂØæÂøúÔºàXcode 16+ÂØæÂøúÔºâ
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Homebrew packages
        uses: actions/cache@v4
        with:
          path: /usr/local/Cellar/xcodegen
          key: ${{ runner.os }}-homebrew-xcodegen-${{ hashFiles('.github/workflows/docc-build.yml') }}
          restore-keys: |
            ${{ runner.os }}-homebrew-xcodegen-

      - name: Check Xcode version and install xcodegen
        run: |
          set -ex
          echo "=== Checking Xcode environment ==="
          xcodebuild -version || echo "Xcode not found"
          xcrun swift --version || echo "Swift not found"

          echo "=== Installing xcodegen ==="
          if ! command -v xcodegen &> /dev/null; then
            echo "Installing xcodegen..."
            brew install xcodegen
          else
            echo "xcodegen already installed"
          fi
          xcodegen --version

          echo "=== Final environment check ==="
          xcodebuild -version
          xcrun swift --version

      - name: Cache Xcode build
        uses: actions/cache@v4
        with:
          path: DerivedData
          key: ${{ runner.os }}-xcode-${{ hashFiles('project.yml', 'TekuToko.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Generate Xcode project and verify
        env:
          DEVELOPMENT_TEAM: ${{ secrets.DEVELOPMENT_TEAM }}
        run: |
          set -ex
          echo "=== Environment Info ==="
          echo "DEVELOPMENT_TEAM: ${DEVELOPMENT_TEAM:0:10}..."
          echo "Current directory: $(pwd)"
          echo "Contents: $(ls -la)"

          echo "=== Generating Xcode project ==="
          xcodegen generate

          echo "=== Verifying project generation ==="
          if [ -f "TekuToko.xcodeproj/project.pbxproj" ]; then
            echo "‚úÖ TekuToko.xcodeproj generated successfully"
            ls -la TekuToko.xcodeproj/
          else
            echo "‚ùå TekuToko.xcodeproj generation failed"
            exit 1
          fi

      - name: Clean Package.resolved if incompatible
        run: |
          set -ex
          echo "=== Checking Package.resolved compatibility ==="
          PACKAGE_RESOLVED="TekuToko.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved"
          if [ -f "$PACKAGE_RESOLVED" ]; then
            echo "Package.resolved found, checking version compatibility..."
            if grep -q '"version" : 3' "$PACKAGE_RESOLVED" 2>/dev/null; then
              echo "‚úÖ Package.resolved version 3 detected, should be compatible with Xcode 15.3+"
            else
              echo "‚ö†Ô∏è  Package.resolved might be older version, keeping as-is"
            fi
          else
            echo "üì¶ Package.resolved not found, will be generated during resolution"
          fi

      - name: Cache SwiftPM packages
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
          key: ${{ runner.os }}-swiftpm-${{ hashFiles('project.yml') }}
          restore-keys: |
            ${{ runner.os }}-swiftpm-

      - name: Resolve SwiftPM packages
        run: |
          set -ex
          echo "=== Resolving SwiftPM dependencies ==="
          xcodebuild -resolvePackageDependencies -scheme TekuToko

          echo "=== Package resolution completed ==="
          if [ -f "TekuToko.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" ]; then
            echo "‚úÖ Package.resolved generated"
          else
            echo "‚ö†Ô∏è  Package.resolved not found, continuing..."
          fi

      - name: Build DocC
        run: |
          set -ex
          echo "=== Building DocC documentation ==="
          xcodebuild docbuild -scheme TekuToko \
            -sdk iphonesimulator \
            -derivedDataPath ./DerivedData

          echo "=== Verifying DocC archive generation ==="
          DOCC_ARCHIVE="./DerivedData/Build/Products/Debug-iphonesimulator/TekuToko.doccarchive"
          if [ -d "$DOCC_ARCHIVE" ]; then
            echo "‚úÖ DocC archive generated at: $DOCC_ARCHIVE"
            ls -la "$DOCC_ARCHIVE"
          else
            echo "‚ùå DocC archive not found"
            echo "Available files in DerivedData:"
            find ./DerivedData -name "*.doccarchive" -type d || echo "No .doccarchive found"
            exit 1
          fi

      - name: Convert to static site
        run: |
          set -ex
          echo "=== Converting DocC archive to static site ==="
          DOCC_ARCHIVE="./DerivedData/Build/Products/Debug-iphonesimulator/TekuToko.doccarchive"
          xcrun docc process-archive transform-for-static-hosting \
            "$DOCC_ARCHIVE" \
            --output-path ./docs \
            --hosting-base-path TekuToko

          echo "=== Verifying static site generation ==="
          if [ -f "./docs/index.html" ]; then
            echo "‚úÖ Static site generated successfully"
            echo "Generated files:"
            ls -la ./docs/
          else
            echo "‚ùå Static site generation failed"
            exit 1
          fi

      - name: Fix paths for GitHub Pages
        run: |
          set -e
          cd docs
          sed -i '' 's|"/TekuToko/"|"./"|g' index.html
          sed -i '' 's|var baseUrl = "/TekuToko/"|var baseUrl = "./"|g' index.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
